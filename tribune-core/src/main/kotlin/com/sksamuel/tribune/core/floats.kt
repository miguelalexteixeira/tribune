package com.sksamuel.tribune.core

import arrow.core.invalidNel
import arrow.core.validNel

/**
 * Extends a [Parser] of output type string to parse that string into a double.
 * If the string cannot be parsed into a double, then the error is generated by the
 * given function [ifError].
 *
 * Note: This parser accepts nullable inputs if the receiver accepts nullable inputs
 * and a null is considered a failing case.
 */
fun <I, E> Parser<I, String, E>.float(ifError: (String) -> E): Parser<I, Float, E> =
   flatMap {
      val f = it.toFloatOrNull()
      f?.validNel() ?: ifError(it).invalidNel()
   }
